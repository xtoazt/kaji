-- Seed data for ChromeOS exploits from various sources
-- Based on exploits from https://github.com/Burvyn/Corellium and https://github.com/3kh0/ext-remover

-- Insert additional vulnerability categories for ChromeOS-specific exploits
INSERT INTO vulnerability_categories (name, description, severity_level) VALUES
('Extension Bypass', 'Chrome extension restriction bypasses', 7),
('Bookmarklet Exploit', 'JavaScript bookmarklet-based exploits', 6),
('WebView Exploit', 'Chrome WebView component exploits', 8),
('Policy Bypass', 'ChromeOS policy enforcement bypasses', 7),
('Extension Removal', 'Chrome extension removal exploits', 6),
('DevTools Bypass', 'Developer tools restriction bypasses', 5),
('Network Filter Bypass', 'Network filtering and blocking bypasses', 6),
('uBlock Exploit', 'uBlock Origin extension exploits', 5),
('QuickOffice Exploit', 'QuickOffice component exploits', 7),
('OneTab Exploit', 'OneTab extension exploits', 4)
ON CONFLICT (name) DO NOTHING;

-- Insert ChromeOS exploits from the repositories
-- Note: These are placeholder entries based on the repository descriptions
-- In a real implementation, you would extract the actual exploit data

-- QuickView Exploit (from ext-remover)
INSERT INTO exploits (
    title, description, severity, category_id, chromeos_version_id, 
    discovered_date, disclosed_date, exploit_code, proof_of_concept, 
    references, tags, is_verified, is_public
) VALUES (
    'QuickView WebView Exploit',
    'Universal webview exploit in Chrome OS that utilizes the QuickOffice component extension. This exploit lets you create login windows with arbitrary URLs, thus allowing you to load pages without any extensions.',
    'high',
    (SELECT id FROM vulnerability_categories WHERE name = 'QuickOffice Exploit'),
    (SELECT id FROM chromeos_versions WHERE version = '120.0.6099.129'),
    '2023-01-15',
    '2023-01-20',
    'javascript:window.open("https://quickview-exploit.pages.dev", "_blank");',
    'Visit quickview-exploit.pages.dev and follow the instructions to exploit the QuickOffice component.',
    '["https://quickview-exploit.pages.dev", "https://github.com/3kh0/ext-remover"]',
    ARRAY['webview', 'quickoffice', 'extension-bypass'],
    true,
    true
);

-- Buypass Exploit (from ext-remover)
INSERT INTO exploits (
    title, description, severity, category_id, chromeos_version_id, 
    discovered_date, disclosed_date, exploit_code, proof_of_concept, 
    references, tags, is_verified, is_public
) VALUES (
    'Buypass Extension Bypass',
    'Extension bypass that lasts for 3 minutes. Pages visited in this window will not be saved to your history, but their cookies will be saved. This exploit bypasses certain ChromeOS restrictions.',
    'medium',
    (SELECT id FROM vulnerability_categories WHERE name = 'Extension Bypass'),
    (SELECT id FROM chromeos_versions WHERE version = '119.0.6045.215'),
    '2023-02-10',
    '2023-02-15',
    'javascript:window.open("https://the-buypass.netlify.app/", "_blank");',
    'Visit any of the Buypass links and follow the instructions. Note: This only lasts for 3 minutes and may not bypass network filters.',
    '["https://the-buypass.netlify.app/", "https://playful-meringue-fb58bc.netlify.app/", "https://buypass-poc.netlify.app/"]',
    ARRAY['extension-bypass', 'temporary', 'netlify'],
    true,
    true
);

-- Chaos Hapara Bypass (from ext-remover)
INSERT INTO exploits (
    title, description, severity, category_id, chromeos_version_id, 
    discovered_date, disclosed_date, exploit_code, proof_of_concept, 
    references, tags, is_verified, is_public
) VALUES (
    'Chaos Hapara Bypass',
    'Hapara bypass exploit that requires DevTools to not be allowed by policy. This exploit can bypass certain educational restrictions.',
    'medium',
    (SELECT id FROM vulnerability_categories WHERE name = 'Policy Bypass'),
    (SELECT id FROM chromeos_versions WHERE version = '118.0.5993.117'),
    '2023-03-05',
    '2023-03-10',
    'javascript:/* Chaos exploit code */',
    'Go to the Chaos exploit link and follow the instructions. Note: DevTools must not be allowed by policy.',
    '["https://github.com/3kh0/ext-remover"]',
    ARRAY['hapara', 'policy-bypass', 'education'],
    true,
    true
);

-- SOT Exploit (from ext-remover)
INSERT INTO exploits (
    title, description, severity, category_id, chromeos_version_id, 
    discovered_date, disclosed_date, exploit_code, proof_of_concept, 
    references, tags, is_verified, is_public
) VALUES (
    'SOT OneTab Exploit',
    'OneTab extension exploit that allows opening URLs in OneTab. This exploit works by importing a URL multiple times and then exploiting the OneTab extension behavior.',
    'low',
    (SELECT id FROM vulnerability_categories WHERE name = 'OneTab Exploit'),
    (SELECT id FROM chromeos_versions WHERE version = '117.0.5938.157'),
    '2023-04-01',
    '2023-04-05',
    'javascript:/* OneTab import exploit */',
    '1. Install OneTab if not already installed. 2. Click import button in settings. 3. Copy-paste URL 100 times. 4. Spam click the top link.',
    '["https://github.com/3kh0/ext-remover"]',
    ARRAY['onetab', 'extension', 'import'],
    true,
    true
);

-- GoGuardian GoAway (from ext-remover)
INSERT INTO exploits (
    title, description, severity, category_id, chromeos_version_id, 
    discovered_date, disclosed_date, exploit_code, proof_of_concept, 
    references, tags, is_verified, is_public
) VALUES (
    'GoGuardian GoAway Bypass',
    'GoGuardian bypass exploit that works by exploiting the GoGuardian extension. This exploit will not work if you have any extension besides GoGuardian.',
    'high',
    (SELECT id FROM vulnerability_categories WHERE name = 'Extension Bypass'),
    (SELECT id FROM chromeos_versions WHERE version = '116.0.5845.187'),
    '2023-05-10',
    '2023-05-15',
    'javascript:/* GoGuardian bypass code */',
    '1. Ensure GoGuardian is installed. 2. Visit the exploit URL. 3. Reload the page. 4. Visit chrome://restart to clear cached sites.',
    '["https://github.com/3kh0/ext-remover"]',
    ARRAY['goguardian', 'extension-bypass', 'education'],
    true,
    true
);

-- uBlock Run Exploit (from ext-remover)
INSERT INTO exploits (
    title, description, severity, category_id, chromeos_version_id, 
    discovered_date, disclosed_date, exploit_code, proof_of_concept, 
    references, tags, is_verified, is_public
) VALUES (
    'uBlock Run Script Execution',
    'uBlock Origin extension exploit that allows running custom JavaScript code on pages. This exploit works by modifying uBlock settings to load custom scripts.',
    'medium',
    (SELECT id FROM vulnerability_categories WHERE name = 'uBlock Exploit'),
    (SELECT id FROM chromeos_versions WHERE version = '115.0.5790.102'),
    '2023-06-01',
    '2023-06-05',
    'javascript:/* uBlock script execution */',
    '1. Open uBlock settings. 2. Enable advanced settings. 3. Add userResourcesLocation https://ustuff.github.io/uRun/urun.js. 4. Add filter *##+js(urun.js). 5. Press Ctrl+Shift+` to open menu.',
    '["https://ustuff.github.io/uRun/urun.js", "https://github.com/3kh0/ext-remover"]',
    ARRAY['ublock', 'script-execution', 'extension'],
    true,
    true
);

-- Microsoft Labs Virtual Machine (from ext-remover)
INSERT INTO exploits (
    title, description, severity, category_id, chromeos_version_id, 
    discovered_date, disclosed_date, exploit_code, proof_of_concept, 
    references, tags, is_verified, is_public
) VALUES (
    'Microsoft Labs VM Access',
    'Access to Microsoft Labs virtual machine environment. This provides a Windows-like environment within ChromeOS, though with limitations.',
    'low',
    (SELECT id FROM vulnerability_categories WHERE name = 'Policy Bypass'),
    (SELECT id FROM chromeos_versions WHERE version = '114.0.5735.133'),
    '2023-07-01',
    '2023-07-05',
    'javascript:window.open("https://labs.microsoft.com", "_blank");',
    '1. Go to Microsoft Labs website. 2. Sign in with Microsoft Account. 3. Launch VM mode. 4. Use password pass@word1. Note: Sound doesn''t work and many websites are blocked.',
    '["https://labs.microsoft.com", "https://github.com/3kh0/ext-remover"]',
    ARRAY['microsoft', 'vm', 'virtual-machine'],
    true,
    true
);

-- Add more exploits for different ChromeOS versions
-- These represent historical exploits that may have been patched in newer versions

-- Bookmarklet-based exploits (older ChromeOS versions)
INSERT INTO exploits (
    title, description, severity, category_id, chromeos_version_id, 
    discovered_date, disclosed_date, exploit_code, proof_of_concept, 
    references, tags, is_verified, is_public
) VALUES (
    'Legacy Bookmarklet Exploit',
    'JavaScript bookmarklet-based exploit that worked on older ChromeOS versions before Google cracked down on bookmarklets.',
    'medium',
    (SELECT id FROM vulnerability_categories WHERE name = 'Bookmarklet Exploit'),
    (SELECT id FROM chromeos_versions WHERE version = '100.0.4896.133'),
    '2022-03-15',
    '2022-03-20',
    'javascript:alert("Bookmarklet exploit");',
    'This exploit worked on ChromeOS versions before the DeveloperToolsAvailability policy was enforced. Bookmarklets are now blocked by default.',
    '["https://github.com/3kh0/ext-remover"]',
    ARRAY['bookmarklet', 'legacy', 'javascript'],
    true,
    true
);

-- Extension removal exploits
INSERT INTO exploits (
    title, description, severity, category_id, chromeos_version_id, 
    discovered_date, disclosed_date, exploit_code, proof_of_concept, 
    references, tags, is_verified, is_public
) VALUES (
    'Extension Removal Exploit',
    'Method to remove or disable certain Chrome extensions on ChromeOS devices, particularly useful for bypassing educational restrictions.',
    'high',
    (SELECT id FROM vulnerability_categories WHERE name = 'Extension Removal'),
    (SELECT id FROM chromeos_versions WHERE version = '105.0.5195.134'),
    '2022-08-20',
    '2022-08-25',
    'javascript:/* Extension removal code */',
    'Various methods exist for removing extensions, including through developer mode, policy manipulation, or extension-specific vulnerabilities.',
    '["https://github.com/3kh0/ext-remover"]',
    ARRAY['extension-removal', 'bypass', 'education'],
    true,
    true
);

-- Network filter bypasses
INSERT INTO exploits (
    title, description, severity, category_id, chromeos_version_id, 
    discovered_date, disclosed_date, exploit_code, proof_of_concept, 
    references, tags, is_verified, is_public
) VALUES (
    'Network Filter Bypass',
    'Various methods to bypass network filtering and content blocking on ChromeOS devices, particularly in educational environments.',
    'medium',
    (SELECT id FROM vulnerability_categories WHERE name = 'Network Filter Bypass'),
    (SELECT id FROM chromeos_versions WHERE version = '110.0.5481.177'),
    '2023-02-01',
    '2023-02-05',
    'javascript:/* Network bypass code */',
    'Multiple techniques exist including proxy usage, DNS manipulation, and exploiting network filter vulnerabilities.',
    '["https://github.com/3kh0/ext-remover"]',
    ARRAY['network-bypass', 'proxy', 'dns'],
    true,
    true
);

-- DevTools bypass exploits
INSERT INTO exploits (
    title, description, severity, category_id, chromeos_version_id, 
    discovered_date, disclosed_date, exploit_code, proof_of_concept, 
    references, tags, is_verified, is_public
) VALUES (
    'Developer Tools Bypass',
    'Methods to access or enable developer tools on ChromeOS devices where they have been disabled by policy.',
    'low',
    (SELECT id FROM vulnerability_categories WHERE name = 'DevTools Bypass'),
    (SELECT id FROM chromeos_versions WHERE version = '108.0.5359.124'),
    '2022-11-15',
    '2022-11-20',
    'javascript:/* DevTools bypass */',
    'Various methods to enable developer tools including keyboard shortcuts, policy manipulation, and extension-based approaches.',
    '["https://github.com/3kh0/ext-remover"]',
    ARRAY['devtools', 'developer', 'bypass'],
    true,
    true
);
